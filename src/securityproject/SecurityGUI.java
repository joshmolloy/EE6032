/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package securityproject;

import java.awt.BorderLayout;
import java.awt.Button;
import java.awt.Dimension;
import java.awt.Event;
import java.awt.TextArea;
import java.awt.TextField;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;

/**
 *
 * @author Josh
 */
public class SecurityGUI extends javax.swing.JFrame implements Runnable{
    Socket soc;    
    String sendTo;
    String LoginName;
    Thread t=null;
    DataOutputStream dout;
    DataInputStream din;

 static {
    try {
        System.loadLibrary("chilkat");
    } catch (UnsatisfiedLinkError e) {
      System.err.println("Native code library failed to load.\n" + e);
      System.exit(1);
    }
  }
 
    SecurityGUI(String LoginName,String chatwith) throws Exception
    {
        super(LoginName);
        this.LoginName=LoginName;
        sendTo=chatwith;
        soc=new Socket("127.0.0.1",5217);

        din=new DataInputStream(soc.getInputStream()); 
        dout=new DataOutputStream(soc.getOutputStream());        
        dout.writeUTF(LoginName);

        t=new Thread(this);
        t.start();
        initComponents();

    }
    
    /**
     * Creates new form SecurityGUI
     */
    public SecurityGUI() throws IOException {
        initComponents();
        
//                
//        JTextArea textArea = new JTextArea();
//        JScrollPane scrollpane = new JScrollPane(textArea);
//        PrintStream printStream = new PrintStream(new CustomOutputStream(textArea));
//        System.setOut(printStream);
//        System.setErr(printStream);
//        textArea.setVisible(true);
//        OutputPanel.setLayout(new java.awt.BorderLayout());
//        OutputPanel.add(scrollpane, BorderLayout.CENTER);
//        OutputPanel.setPreferredSize(new Dimension(450,200));
//        OutputPanel.validate();
//        OutputPanel.setVisible(true);
//        OutputPanel.repaint();

    }
    
    @Override
    public void run()
    {        
        while(true)
        {
            try
            {
                Output.append( "\n" + sendTo + " Says :" + din.readUTF());
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        SendPanel = new javax.swing.JPanel();
        MessageText = new javax.swing.JTextField();
        MessageLabel2 = new javax.swing.JLabel();
        EncryptButton = new javax.swing.JButton();
        MessageAESEncrypted = new javax.swing.JTextField();
        AESEncryptedMessageLabel2 = new javax.swing.JLabel();
        SHA1MessageLabel3 = new javax.swing.JLabel();
        MessageSHA = new javax.swing.JTextField();
        RSAEncryptedMessageLabel2 = new javax.swing.JLabel();
        MessageRSAEncrypted = new javax.swing.JTextField();
        ReceivePanel = new javax.swing.JPanel();
        MessageAESReceived = new javax.swing.JTextField();
        AESDecryptedMessageLabel = new javax.swing.JLabel();
        RSADecryptedMessageLabel = new javax.swing.JLabel();
        MessageRSAReceived = new javax.swing.JTextField();
        MessageReceived = new javax.swing.JTextField();
        RSADecryptedMessageLabel1 = new javax.swing.JLabel();
        SHAHashedMessageLabel = new javax.swing.JLabel();
        MessageHashReceived = new javax.swing.JTextField();
        ConnectPanel = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        OutputPanel = new javax.swing.JPanel();
        inputText = new javax.swing.JTextField();
        SendButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Output = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MessageLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        MessageLabel2.setText("Enter message to encrypt: ");

        EncryptButton.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        EncryptButton.setText("Encrypt");
        EncryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncryptButtonActionPerformed(evt);
            }
        });

        AESEncryptedMessageLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        AESEncryptedMessageLabel2.setText("AES encrypted message:");

        SHA1MessageLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        SHA1MessageLabel3.setText("SHA1 hashed message:");

        RSAEncryptedMessageLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        RSAEncryptedMessageLabel2.setText("RSA encrypted message:");

        javax.swing.GroupLayout SendPanelLayout = new javax.swing.GroupLayout(SendPanel);
        SendPanel.setLayout(SendPanelLayout);
        SendPanelLayout.setHorizontalGroup(
            SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SendPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SendPanelLayout.createSequentialGroup()
                        .addComponent(RSAEncryptedMessageLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MessageRSAEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SendPanelLayout.createSequentialGroup()
                        .addComponent(SHA1MessageLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MessageSHA, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SendPanelLayout.createSequentialGroup()
                        .addComponent(AESEncryptedMessageLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MessageAESEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SendPanelLayout.createSequentialGroup()
                        .addComponent(MessageLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(MessageText, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(EncryptButton)
                .addContainerGap(124, Short.MAX_VALUE))
        );
        SendPanelLayout.setVerticalGroup(
            SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SendPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EncryptButton)
                    .addGroup(SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MessageLabel2)
                        .addComponent(MessageText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AESEncryptedMessageLabel2)
                    .addComponent(MessageAESEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SHA1MessageLabel3)
                    .addComponent(MessageSHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RSAEncryptedMessageLabel2)
                    .addComponent(MessageRSAEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(206, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Send", SendPanel);

        AESDecryptedMessageLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        AESDecryptedMessageLabel.setText("AES encrypted message:");

        RSADecryptedMessageLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        RSADecryptedMessageLabel.setText("RSA encrypted message:");

        RSADecryptedMessageLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        RSADecryptedMessageLabel1.setText("Plaintext message:");

        SHAHashedMessageLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        SHAHashedMessageLabel.setText("SHA1 Hashed Message: ");

        javax.swing.GroupLayout ReceivePanelLayout = new javax.swing.GroupLayout(ReceivePanel);
        ReceivePanel.setLayout(ReceivePanelLayout);
        ReceivePanelLayout.setHorizontalGroup(
            ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReceivePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReceivePanelLayout.createSequentialGroup()
                        .addComponent(AESDecryptedMessageLabel)
                        .addGap(19, 19, 19)
                        .addComponent(MessageAESReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ReceivePanelLayout.createSequentialGroup()
                        .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RSADecryptedMessageLabel)
                            .addComponent(RSADecryptedMessageLabel1)
                            .addComponent(SHAHashedMessageLabel))
                        .addGap(18, 18, 18)
                        .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MessageHashReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MessageReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MessageRSAReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(231, Short.MAX_VALUE))
        );
        ReceivePanelLayout.setVerticalGroup(
            ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReceivePanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MessageAESReceived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AESDecryptedMessageLabel))
                .addGap(18, 18, 18)
                .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SHAHashedMessageLabel)
                    .addComponent(MessageHashReceived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RSADecryptedMessageLabel)
                    .addComponent(MessageRSAReceived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RSADecryptedMessageLabel1)
                    .addComponent(MessageReceived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(205, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Receive", ReceivePanel);

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton3.setText("Generate Session Key");

        SendButton.setText("Send");
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        Output.setColumns(20);
        Output.setRows(5);
        jScrollPane1.setViewportView(Output);

        javax.swing.GroupLayout OutputPanelLayout = new javax.swing.GroupLayout(OutputPanel);
        OutputPanel.setLayout(OutputPanelLayout);
        OutputPanelLayout.setHorizontalGroup(
            OutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OutputPanelLayout.createSequentialGroup()
                .addComponent(inputText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1)
        );
        OutputPanelLayout.setVerticalGroup(
            OutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OutputPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(OutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SendButton)))
        );

        javax.swing.GroupLayout ConnectPanelLayout = new javax.swing.GroupLayout(ConnectPanel);
        ConnectPanel.setLayout(ConnectPanelLayout);
        ConnectPanelLayout.setHorizontalGroup(
            ConnectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConnectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConnectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConnectPanelLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(402, Short.MAX_VALUE))
                    .addGroup(ConnectPanelLayout.createSequentialGroup()
                        .addComponent(OutputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(27, 27, 27))))
        );
        ConnectPanelLayout.setVerticalGroup(
            ConnectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConnectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OutputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Connect", ConnectPanel);

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel1.setText("EE6032 Security Project - Group 9");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EncryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncryptButtonActionPerformed
        AES aes = new AES();
        MessageAESEncrypted.setText(aes.Encrypt(MessageText.getText()));
        MessageAESReceived.setText(aes.Decrypt(MessageAESEncrypted.getText()));

        SHA1 sha1 = new SHA1();
        MessageSHA.setText(sha1.Hash(MessageText.getText()));

        RSA rsa = new RSA();
        rsa.GenerateKeys();
        rsa.LoadKeys();
        MessageRSAEncrypted.setText(rsa.Encrypt(MessageText.getText()));
        MessageRSAReceived.setText(rsa.Decrypt(MessageRSAEncrypted.getText()));
    }//GEN-LAST:event_EncryptButtonActionPerformed

    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
        try
            {
                dout.writeUTF(sendTo + " "  + "DATA" + " " + inputText.getText().toString());            
                Output.append("\n" + LoginName + " Says: " + inputText.getText().toString());    
                inputText.setText("");
            }
            catch(Exception ex)
            {} 
            
    }//GEN-LAST:event_SendButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException, InterruptedException, Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecurityGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //if(!serverOnlineCheck())new Server();
        SecurityGUI gui = new SecurityGUI("Client1","Client2");
        gui.setVisible(true);
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AESDecryptedMessageLabel;
    private javax.swing.JLabel AESEncryptedMessageLabel2;
    private javax.swing.JPanel ConnectPanel;
    private javax.swing.JButton EncryptButton;
    private javax.swing.JTextField MessageAESEncrypted;
    private javax.swing.JTextField MessageAESReceived;
    private javax.swing.JTextField MessageHashReceived;
    private javax.swing.JLabel MessageLabel2;
    private javax.swing.JTextField MessageRSAEncrypted;
    private javax.swing.JTextField MessageRSAReceived;
    private javax.swing.JTextField MessageReceived;
    private javax.swing.JTextField MessageSHA;
    private javax.swing.JTextField MessageText;
    private javax.swing.JTextArea Output;
    private javax.swing.JPanel OutputPanel;
    private javax.swing.JLabel RSADecryptedMessageLabel;
    private javax.swing.JLabel RSADecryptedMessageLabel1;
    private javax.swing.JLabel RSAEncryptedMessageLabel2;
    private javax.swing.JPanel ReceivePanel;
    private javax.swing.JLabel SHA1MessageLabel3;
    private javax.swing.JLabel SHAHashedMessageLabel;
    private javax.swing.JButton SendButton;
    private javax.swing.JPanel SendPanel;
    private javax.swing.JTextField inputText;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}

class CustomOutputStream extends OutputStream {
    private JTextArea textArea;
     
    public CustomOutputStream(JTextArea textArea) {
        this.textArea = textArea;
    }
     
    @Override
    public void write(int b) throws IOException {
        // redirects data to the text area
        textArea.append(String.valueOf((char)b));
        // scrolls the text area to the end of data
        textArea.setCaretPosition(textArea.getDocument().getLength());
    }
}

