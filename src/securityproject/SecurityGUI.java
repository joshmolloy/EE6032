/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package securityproject;

import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Josh
 */
public class SecurityGUI extends javax.swing.JFrame {
    
boolean serverStarted = false;  
Client client = new Client("localhost",8080);
Server server = new Server(8080);
int iteration = 0;
int port = 8085;
boolean listening = false;


    
 static {
    try {
        System.loadLibrary("chilkat");
    } catch (UnsatisfiedLinkError e) {
      System.err.println("Native code library failed to load.\n" + e);
      System.exit(1);
    }
  }
    
    /**
     * Creates new form SecurityGUI
     */
    public SecurityGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        SendPanel = new javax.swing.JPanel();
        MessageText = new javax.swing.JTextField();
        MessageLabel2 = new javax.swing.JLabel();
        EncryptButton = new javax.swing.JButton();
        MessageAESEncrypted = new javax.swing.JTextField();
        AESEncryptedMessageLabel2 = new javax.swing.JLabel();
        SHA1MessageLabel3 = new javax.swing.JLabel();
        MessageSHA = new javax.swing.JTextField();
        RSAEncryptedMessageLabel2 = new javax.swing.JLabel();
        MessageRSAEncrypted = new javax.swing.JTextField();
        SendButton = new javax.swing.JButton();
        ReceivePanel = new javax.swing.JPanel();
        MessageAESReceived = new javax.swing.JTextField();
        AESDecryptedMessageLabel = new javax.swing.JLabel();
        RSADecryptedMessageLabel = new javax.swing.JLabel();
        MessageRSAReceived = new javax.swing.JTextField();
        MessageReceived = new javax.swing.JTextField();
        RSADecryptedMessageLabel1 = new javax.swing.JLabel();
        Listen = new javax.swing.JButton();
        SHAHashedMessageLabel = new javax.swing.JLabel();
        MessageHashReceived = new javax.swing.JTextField();
        ConnectPanel = new javax.swing.JPanel();
        ConnectButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ConnectionOutput = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();

        jTextField3.setText("jTextField3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MessageLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        MessageLabel2.setText("Enter message to encrypt: ");

        EncryptButton.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        EncryptButton.setText("Encrypt");
        EncryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncryptButtonActionPerformed(evt);
            }
        });

        AESEncryptedMessageLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        AESEncryptedMessageLabel2.setText("AES encrypted message:");

        SHA1MessageLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        SHA1MessageLabel3.setText("SHA1 hashed message:");

        RSAEncryptedMessageLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        RSAEncryptedMessageLabel2.setText("RSA encrypted message:");

        SendButton.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        SendButton.setText("Send");
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SendPanelLayout = new javax.swing.GroupLayout(SendPanel);
        SendPanel.setLayout(SendPanelLayout);
        SendPanelLayout.setHorizontalGroup(
            SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SendPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SendPanelLayout.createSequentialGroup()
                        .addComponent(RSAEncryptedMessageLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MessageRSAEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SendPanelLayout.createSequentialGroup()
                        .addComponent(SHA1MessageLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MessageSHA, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SendPanelLayout.createSequentialGroup()
                        .addComponent(AESEncryptedMessageLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MessageAESEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SendPanelLayout.createSequentialGroup()
                        .addComponent(MessageLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(MessageText, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(EncryptButton)
                .addGap(29, 29, 29)
                .addComponent(SendButton)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        SendPanelLayout.setVerticalGroup(
            SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SendPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MessageLabel2)
                    .addComponent(MessageText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EncryptButton)
                        .addComponent(SendButton)))
                .addGap(18, 18, 18)
                .addGroup(SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AESEncryptedMessageLabel2)
                    .addComponent(MessageAESEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SHA1MessageLabel3)
                    .addComponent(MessageSHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(SendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RSAEncryptedMessageLabel2)
                    .addComponent(MessageRSAEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(189, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Send", SendPanel);

        AESDecryptedMessageLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        AESDecryptedMessageLabel.setText("AES encrypted message:");

        RSADecryptedMessageLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        RSADecryptedMessageLabel.setText("RSA encrypted message:");

        RSADecryptedMessageLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        RSADecryptedMessageLabel1.setText("Plaintext message:");

        Listen.setText("Start Listening");
        Listen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListenActionPerformed(evt);
            }
        });

        SHAHashedMessageLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        SHAHashedMessageLabel.setText("SHA1 Hashed Message: ");

        javax.swing.GroupLayout ReceivePanelLayout = new javax.swing.GroupLayout(ReceivePanel);
        ReceivePanel.setLayout(ReceivePanelLayout);
        ReceivePanelLayout.setHorizontalGroup(
            ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReceivePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReceivePanelLayout.createSequentialGroup()
                        .addComponent(AESDecryptedMessageLabel)
                        .addGap(19, 19, 19)
                        .addComponent(MessageAESReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Listen, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ReceivePanelLayout.createSequentialGroup()
                        .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RSADecryptedMessageLabel)
                            .addComponent(RSADecryptedMessageLabel1)
                            .addComponent(SHAHashedMessageLabel))
                        .addGap(18, 18, 18)
                        .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MessageHashReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MessageReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MessageRSAReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(231, Short.MAX_VALUE))
        );
        ReceivePanelLayout.setVerticalGroup(
            ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReceivePanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MessageAESReceived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AESDecryptedMessageLabel))
                .addGap(18, 18, 18)
                .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SHAHashedMessageLabel)
                    .addComponent(MessageHashReceived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RSADecryptedMessageLabel)
                    .addComponent(MessageRSAReceived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ReceivePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RSADecryptedMessageLabel1)
                    .addComponent(MessageReceived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(Listen, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(138, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Receive", ReceivePanel);

        ConnectButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ConnectButton.setText("Connect");
        ConnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectButtonActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton3.setText("Generate Session Key");

        jScrollPane1.setViewportView(ConnectionOutput);

        javax.swing.GroupLayout ConnectPanelLayout = new javax.swing.GroupLayout(ConnectPanel);
        ConnectPanel.setLayout(ConnectPanelLayout);
        ConnectPanelLayout.setHorizontalGroup(
            ConnectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConnectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConnectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConnectPanelLayout.createSequentialGroup()
                        .addComponent(ConnectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122))
                    .addGroup(ConnectPanelLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        ConnectPanelLayout.setVerticalGroup(
            ConnectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConnectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConnectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(ConnectButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addGap(131, 131, 131)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Connect", ConnectPanel);

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel1.setText("EE6032 Security Project - Group 9");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectButtonActionPerformed
        // Start the server if it is not already running
        if(!Server.serverOnlineCheck()){
            try {
                System.out.println("Entered Server");
                ConnectionOutput.setText(server.start());
                //trying to establish connection to the server
                ConnectionOutput.setText(ConnectionOutput.getText() + client.connect() + "\n");                
            } catch (IOException ex) {
                Logger.getLogger(SecurityGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // Else connect the client to the server
        else{
            try {
                ConnectionOutput.setText("----------------Client----------------\n" + client.connect() + "\n");
            } catch (IOException ex) {
                Logger.getLogger(SecurityGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_ConnectButtonActionPerformed

    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
        iteration++;
        SendSocket send = new SendSocket();
        send.bind(MessageText.getText(),port+iteration);
        ConnectionOutput.setText(ConnectionOutput.getText() + "\nMessage Sent: \"" + MessageText.getText() + "\"\n");
        
    }//GEN-LAST:event_SendButtonActionPerformed

    private void ListenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListenActionPerformed
        if (listening){
            listening = false;
            Listen.setText("Start Listening");
        }
        else {
            iteration++;
            listening = true;
            Listen.setText("Stop Listening");
            ReceiveSocket receive = new ReceiveSocket(); 
            MessageReceived.setText(receive.listen(port+iteration));
            ConnectionOutput.setText(ConnectionOutput.getText() + "\nMessage Received: \"" + MessageReceived.getText() + "\"\n");
            Listen.setText("Start Listening");
            listening = false;
        }
    }//GEN-LAST:event_ListenActionPerformed

    private void EncryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncryptButtonActionPerformed
        AES aes = new AES();
        MessageAESEncrypted.setText(aes.Encrypt(MessageText.getText()));
        MessageAESReceived.setText(aes.Decrypt(MessageAESEncrypted.getText()));

        SHA1 sha1 = new SHA1();
        MessageSHA.setText(sha1.Hash(MessageText.getText()));

        RSA rsa = new RSA();
        rsa.GenerateKeys();
        rsa.LoadKeys();
        MessageRSAEncrypted.setText(rsa.Encrypt(MessageText.getText()));
        MessageRSAReceived.setText(rsa.Decrypt(MessageRSAEncrypted.getText()));
    }//GEN-LAST:event_EncryptButtonActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecurityGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        new SecurityGUI().setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AESDecryptedMessageLabel;
    private javax.swing.JLabel AESEncryptedMessageLabel2;
    private javax.swing.JButton ConnectButton;
    private javax.swing.JPanel ConnectPanel;
    private javax.swing.JTextPane ConnectionOutput;
    private javax.swing.JButton EncryptButton;
    private javax.swing.JButton Listen;
    private javax.swing.JTextField MessageAESEncrypted;
    private javax.swing.JTextField MessageAESReceived;
    private javax.swing.JTextField MessageHashReceived;
    private javax.swing.JLabel MessageLabel2;
    private javax.swing.JTextField MessageRSAEncrypted;
    private javax.swing.JTextField MessageRSAReceived;
    private javax.swing.JTextField MessageReceived;
    private javax.swing.JTextField MessageSHA;
    private javax.swing.JTextField MessageText;
    private javax.swing.JLabel RSADecryptedMessageLabel;
    private javax.swing.JLabel RSADecryptedMessageLabel1;
    private javax.swing.JLabel RSAEncryptedMessageLabel2;
    private javax.swing.JPanel ReceivePanel;
    private javax.swing.JLabel SHA1MessageLabel3;
    private javax.swing.JLabel SHAHashedMessageLabel;
    private javax.swing.JButton SendButton;
    private javax.swing.JPanel SendPanel;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}